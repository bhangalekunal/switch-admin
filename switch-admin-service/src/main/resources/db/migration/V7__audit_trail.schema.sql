CREATE TABLE AUDIT_TRAIL (
    AUDIT_ID VARCHAR2(12) NOT NULL,
    USER_ID VARCHAR2(12) NOT NULL,
    USER_NAME VARCHAR2(100) NOT NULL,
    ACTION_TYPE VARCHAR2(50) NOT NULL,
    TARGET_ENTITY VARCHAR2(100) NOT NULL,
    TARGET_ENTITY_ID VARCHAR2(12),
    OLD_VALUE CLOB,
    NEW_VALUE CLOB,
    ACTION_DESCRIPTION CLOB NOT NULL,
    ACTION_STATUS VARCHAR2(20) NOT NULL,
    ERROR_MESSAGE CLOB,
    IP_ADDRESS VARCHAR2(45),
    USER_AGENT CLOB,
    AUTH_METHOD VARCHAR2(20),
    CONSTRAINT PK_AUDIT_TRAIL PRIMARY KEY (AUDIT_ID),
    ACTION_TIMESTAMP TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
    IS_SENSITIVE NUMBER(1) DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_AUDIT_TRAIL_IS_SENSITIVE CHECK (IS_SENSITIVE IN (0, 1)),
    CONSTRAINT CHK_AUDIT_TRAIL_ACTION_TYPE CHECK (
       ACTION_TYPE IN ('CREATE', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'ACCESS', 'SYSTEM_EVENT')
    ),
    CONSTRAINT CHK_AUDIT_TRAIL_ACTION_STATUS CHECK (
       ACTION_STATUS IN ('SUCCESS', 'FAILURE', 'PARTIAL', 'DENIED')
    ),
    CONSTRAINT CHK_AUDIT_TRAIL_AUTH_METHOD CHECK (
       AUTH_METHOD IN ('JWT', 'OAUTH2', 'BASIC', 'API_KEY')
    )
);

-- Create an index on frequently queried columns
CREATE INDEX IDX_AUDIT_TRAIL_USER_ID ON AUDIT_TRAIL(USER_ID);
CREATE INDEX IDX_AUDIT_TRAIL_ACTION_TIMESTAMP ON AUDIT_TRAIL(ACTION_TIMESTAMP);
CREATE INDEX IDX_AUDIT_TRAIL_ACTION_TYPE ON AUDIT_TRAIL(ACTION_TYPE);
CREATE INDEX IDX_AUDIT_TRAIL_TARGET_ENTITY ON AUDIT_TRAIL(TARGET_ENTITY);

-- Create sequence with optimal settings
CREATE SEQUENCE AUDIT_TRAIL_SEQ
    START WITH 1
    INCREMENT BY 1
    CACHE 20
    NOCYCLE
    ORDER;

-- Create trigger for ID generation (alternative approach)
CREATE OR REPLACE TRIGGER AUDIT_TRAIL_BI
BEFORE INSERT ON AUDIT_TRAIL
FOR EACH ROW
BEGIN
    IF :NEW.AUDIT_ID IS NULL THEN
        SELECT 'ADTL' || LPAD(AUDIT_TRAIL_SEQ.NEXTVAL, 8, '0')
        INTO :NEW.AUDIT_ID
        FROM DUAL;
    END IF;

    -- Force consistent timestamps
    :NEW.ACTION_TIMESTAMP := SYSTIMESTAMP;
END;
/


COMMENT ON TABLE AUDIT_TRAIL IS 'Table for storing audit trail records of system activities';
COMMENT ON COLUMN AUDIT_TRAIL.AUDIT_ID IS 'Unique identifier for the audit record';
COMMENT ON COLUMN AUDIT_TRAIL.USER_ID IS 'ID of the user who performed the action';
COMMENT ON COLUMN AUDIT_TRAIL.USER_NAME IS 'Name of the user who performed the action';
COMMENT ON COLUMN AUDIT_TRAIL.ACTION_TYPE IS 'Type of action performed (CREATE, UPDATE, DELETE, etc.)';
COMMENT ON COLUMN AUDIT_TRAIL.TARGET_ENTITY IS 'Entity/table that was affected by the action';
COMMENT ON COLUMN AUDIT_TRAIL.TARGET_ENTITY_ID IS 'ID of the specific record that was affected';
COMMENT ON COLUMN AUDIT_TRAIL.OLD_VALUE IS 'Previous value before the action (for updates)';
COMMENT ON COLUMN AUDIT_TRAIL.NEW_VALUE IS 'New value after the action';
COMMENT ON COLUMN AUDIT_TRAIL.ACTION_DESCRIPTION IS 'Detailed description of the action performed';
COMMENT ON COLUMN AUDIT_TRAIL.ACTION_STATUS IS 'Status of the action (SUCCESS, FAILURE, etc.)';
COMMENT ON COLUMN AUDIT_TRAIL.ERROR_MESSAGE IS 'Error message if the action failed';
COMMENT ON COLUMN AUDIT_TRAIL.IP_ADDRESS IS 'IP address of the user who performed the action';
COMMENT ON COLUMN AUDIT_TRAIL.USER_AGENT IS 'User agent/browser information';
COMMENT ON COLUMN AUDIT_TRAIL.AUTH_METHOD IS 'Authentication method used (JWT, OAUTH2, etc.)';
COMMENT ON COLUMN AUDIT_TRAIL.ACTION_TIMESTAMP IS 'Timestamp when the action occurred';
COMMENT ON COLUMN AUDIT_TRAIL.IS_SENSITIVE IS 'Flag indicating if the audit record contains sensitive data';